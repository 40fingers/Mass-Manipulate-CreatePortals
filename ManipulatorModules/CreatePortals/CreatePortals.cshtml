@using System.Web.UI.WebControls
@inherits FortyFingers.DnnMassManipulate.Components._40FingersLib.FfRazorViewPageOfT<FortyFingers.DnnMassManipulate.ManipulatorModules.CreatePortals.CreatePortalsModel>
@{
}
<div class="dnnForm ffmm-createportals" id="ffmmCreatePortalsForm">
    <h2>Create Portals from a template</h2>
    <fieldset>
        <div class="dnnFormItem">
            <label class="dnnLabel">Input</label>
            <select name="PortalTemplate" id="mmcpPortalTemplate">
                <option value=""></option>
                @foreach (ListItem pTemplate in Model.Templates)
                {
                    <option value="@pTemplate.Value">@pTemplate.Text</option>
                }
            </select>
        </div>
        <div class="dnnFormItem">
            <label class="dnnLabel">Number of portals</label>
            <input type="number" name="numberOfPortals" class="dnnFormInput" value="1" />
        </div>
        <div class="dnnFormItem">
            <label class="dnnLabel">As child portal(s)</label>
            <input type="checkbox" name="asChildPortals" class="dnnFormInput" />
        </div>
        <div class="dnnFormItem">
            <label class="dnnLabel">HTTPAlias (use [NAME] to include portal name)</label>
            <input type="text" name="portalAlias" class="dnnFormInput" maxlength="200" value="" />
        </div>
        <div class="dnnFormItem">
            <label class="dnnLabel">Portal name prefix (number will be added)</label>
            <input type="text" name="portalNamePrefix" class="dnnFormInput" maxlength="200" value="" />
        </div>
    </fieldset>
    <ul class="dnnActions dnnClear">
        <li><input type="button" class="dnnPrimaryAction" onclick="doCreatePortals();" value="Create Portals" /></li>
    </ul>
	
	<section class="ffmm-logging">
		<h3>Logging:</h3>
		<div id="ffmmCreatePortalsLog"></div>
	</section>

</div>
<script>
    function doCreatePortals() {
        let service = FF.getService("40FDMM", "CreatePortals", @Model.Context.Module.ModuleID, @Model.Context.Portal.ActiveTab.TabID);
        let postData = {};
        let numberOfPortals = $("#ffmmCreatePortalsForm input[name=numberOfPortals]").val();
        postData.Template = $("#ffmmCreatePortalsForm select[name=PortalTemplate]").val();
        postData.NumberOfPortals = numberOfPortals;
        postData.AsChildPortals = $("#ffmmCreatePortalsForm input[name=asChildPortals]").is(":checked");
        postData.PortalNamePrefix = $("#ffmmCreatePortalsForm input[name=portalNamePrefix]").val();
        postData.HttpAlias = $("#ffmmCreatePortalsForm input[name=portalAlias]").val();

        $("#ffmmCreatePortalsLog").append(`Posting: ${JSON.stringify(postData)}<br/>`);

        postData.PortalNumber = 1;
        doCreatePortalOneByOne(service, postData, numberOfPortals);
    }

    function doCreatePortalOneByOne(service, postData) {
        $("#ffmmCreatePortalsLog").append(`Creating Portal ${postData.PortalNumber}<br/>`);
        FF.postFormFieldsObject(service,
            "Do",
            postData,
            function (responseText) {
                // onDone
                $("#ffmmCreatePortalsLog").append(responseText + "<br/>");
                CreateNextPortal(service, postData);
            },
            function (responseText) {
                // onFail
                $("#ffmmCreatePortalsLog").append("CreatePortals failed with message " + responseText + "<br/>");
                CreateNextPortal(service, postData);
            });
    }
    function CreateNextPortal(service, postData) {
        postData.PortalNumber = postData.PortalNumber + 1;
        if (postData.PortalNumber <= postData.NumberOfPortals) {
            doCreatePortalOneByOne(service, postData);
        }
    }
</script>